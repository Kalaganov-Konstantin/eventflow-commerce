name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

env:
  GO_VERSION: '1.24'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run linters
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run tests
        run: go test -v -race -cover ./...

  security-scan:
    name: Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Run govulncheck on all modules
        run: |
          # Programmatically find all modules in go.work and scan them
          for mod in $(go work edit -json | jq -r '.Use[].DiskPath'); do
            echo "Scanning $mod for vulnerabilities..."
            (cd "$mod" && govulncheck ./...)
          done

  build:
    name: Build & Scan
    runs-on: ubuntu-latest
    needs: [lint, test, security-scan]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker images
        run: docker-compose build
      - name: Scan API Gateway image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'eventflow-commerce-api-gateway:latest'
          format: 'sarif'
          output: 'trivy-api-gateway.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Scan Order Service image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'eventflow-commerce-order:latest'
          format: 'sarif'
          output: 'trivy-order.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Scan Payment Service image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'eventflow-commerce-payment:latest'
          format: 'sarif'
          output: 'trivy-payment.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Scan Inventory Service image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'eventflow-commerce-inventory:latest'
          format: 'sarif'
          output: 'trivy-inventory.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Scan Notification Service image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'eventflow-commerce-notification:latest'
          format: 'sarif'
          output: 'trivy-notification.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload API Gateway scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-api-gateway.sarif'
          category: 'api-gateway'
      
      - name: Upload Order Service scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-order.sarif'
          category: 'order-service'
      
      - name: Upload Payment Service scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-payment.sarif'
          category: 'payment-service'
      
      - name: Upload Inventory Service scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-inventory.sarif'
          category: 'inventory-service'
      
      - name: Upload Notification Service scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-notification.sarif'
          category: 'notification-service'

